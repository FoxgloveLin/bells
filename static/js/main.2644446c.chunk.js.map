{"version":3,"sources":["reportWebVitals.ts","components/BellPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BellPage","useState","lockedBellIndex","setLockedBellIndex","lockedBellIndexRef","useRef","updateBellStateAndRef","value","current","useEffect","shakeEvent","Shake","threshold","timeout","start","window","addEventListener","ringBell","undefined","removeEventListener","stop","bellSounds","bellsCatalog","map","bell","Audio","process","fileName","index","shakeMode","bellIndex","clonedBell","cloneNode","currentTime","startTime","play","className","sharp","onClick","displayName","lockBell","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAceA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,uBCGDQ,G,MAA8B,WAAO,IAAD,EACCC,qBADD,mBACtCC,EADsC,KACrBC,EADqB,KAGvCC,EAAqBC,iBAAOH,GAE5BI,EAAwB,SAACC,GAC3BJ,EAAmBI,GACnBH,EAAmBI,QAAUD,GAgBjCE,qBAb2B,WACvB,IAAMC,EAAa,IAAIC,IAAM,CAAEC,UAAW,GAAIC,QAAS,MAKvD,OAJAH,EAAWI,QAEXC,OAAOC,iBAAiB,SAAS,kBAAMC,OAASC,GAAW,MAAO,GAE1D,WAEJH,OAAOI,oBAAoB,SAAU,kBAAMF,OAASC,GAAW,MAAO,GACtER,EAAWU,UAIW,IAE9B,IAAMC,EAAiCC,EAAaC,KAAI,SAACC,GACrD,OAAO,IAAIC,MAAJ,UAAaC,SAAb,mBAA8CF,EAAKG,cAGxDV,EAAW,SAACW,EAAgBC,GAC9B,IAAMC,EAAYD,EAAYzB,EAAmBI,QAAUoB,EAE3D,QAAkBV,IAAdY,EAAyB,CACzB,IAAMC,EAAkBV,EAAWS,GAAWE,YAC9CD,EAAWE,YAAcX,EAAaQ,GAAWI,UACjDH,EAAWI,SAYnB,OACI,qBAAKC,UAAU,WAAf,SACKd,EAAaC,KAAI,SAACC,EAAYI,GAC3B,OACI,sBACIQ,UAAU,gBADd,UAGI,qBACIA,UAAW,sBAAwBZ,EAAKa,MAAQ,SAAW,IAC3DC,QAAS,kBAAMrB,EAASW,IAF5B,SAIKJ,EAAKe,cAEV,qBACIH,UAAW,sBAAwBlC,IAAoB0B,EAAQ,UAAY,IAC3EU,QAAS,kBAvBhB,SAACV,GAEVtB,EADAJ,IAAoB0B,OACEV,EAEAU,GAmBSY,CAASZ,IAF5B,oCAalBN,EAAuB,CACzB,CACIiB,YAAa,IACbZ,SAAU,YACVO,UAAW,IAEf,CACIK,YAAa,kBACbZ,SAAU,qBACVO,UAAW,IACXG,OAAO,GAEX,CACIE,YAAa,IACbZ,SAAU,QACVO,UAAW,KAEf,CACIK,YAAa,kBACbZ,SAAU,qBACVO,UAAW,GACXG,OAAO,GAEX,CACIE,YAAa,IACbZ,SAAU,QACVO,UAAW,IAEf,CACIK,YAAa,IACbZ,SAAU,QACVO,UAAW,KAEf,CACIK,YAAa,IACbZ,SAAU,QACVO,UAAW,IAEf,CACIK,YAAa,kBACbZ,SAAU,qBACVO,UAAW,GACXG,OAAO,GAEX,CACIE,YAAa,IACbZ,SAAU,QACVO,UAAW,IAEf,CACIK,YAAa,kBACbZ,SAAU,qBACVO,UAAW,GACXG,OAAO,GAEX,CACIE,YAAa,IACbZ,SAAU,QACVO,UAAW,KAEf,CACIK,YAAa,IACbZ,SAAU,aACVO,UAAW,MC9InBO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BtD,M","file":"static/js/main.2644446c.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { FunctionComponent, useEffect, useRef, useState } from 'react';\r\n// @ts-ignore\r\nimport Shake from 'shake.js';\r\nimport './BellPage.scss';\r\n\r\ninterface Bell {\r\n    displayName: string;\r\n    fileName: string;\r\n    startTime: number;\r\n    sharp?: boolean;\r\n}\r\n\r\nexport const BellPage: FunctionComponent = () => {\r\n    const [lockedBellIndex, setLockedBellIndex] = useState<number>();\r\n\r\n    const lockedBellIndexRef = useRef(lockedBellIndex);\r\n\r\n    const updateBellStateAndRef = (value?: number) => {\r\n        setLockedBellIndex(value);\r\n        lockedBellIndexRef.current = value;\r\n    };\r\n\r\n    const initiateShakeEvent = () => {\r\n        const shakeEvent = new Shake({ threshold: 10, timeout: 300 });\r\n        shakeEvent.start();\r\n        // @ts-ignore\r\n        window.addEventListener('shake', () => ringBell(undefined, true), false);\r\n\r\n        return (() => {\r\n            // @ts-ignore\r\n            window.removeEventListener('shake',  () => ringBell(undefined, true), false);\r\n            shakeEvent.stop();\r\n        });\r\n    };\r\n\r\n    useEffect(initiateShakeEvent, []);\r\n\r\n    const bellSounds: HTMLAudioElement[] = bellsCatalog.map((bell: Bell) => {\r\n        return new Audio(`${process.env.PUBLIC_URL}/sounds/${bell.fileName}`);\r\n    });\r\n\r\n    const ringBell = (index?: number, shakeMode?: boolean) => {\r\n        const bellIndex = shakeMode ? lockedBellIndexRef.current : index;\r\n\r\n        if (bellIndex !== undefined) {\r\n            const clonedBell: any = bellSounds[bellIndex].cloneNode(); // actually type HTMLAudioElement\r\n            clonedBell.currentTime = bellsCatalog[bellIndex].startTime;\r\n            clonedBell.play();\r\n        }\r\n    };\r\n\r\n    const lockBell = (index: number) => {\r\n        if (lockedBellIndex === index) {\r\n            updateBellStateAndRef(undefined);\r\n        } else {\r\n            updateBellStateAndRef(index);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='BellPage'>\r\n            {bellsCatalog.map((bell: Bell, index: number) => {\r\n                return (\r\n                    <div\r\n                        className='BellPage-bell'\r\n                    >\r\n                        <div\r\n                            className={'BellPage-bell-note' + (bell.sharp ? ' sharp' : '')}\r\n                            onClick={() => ringBell(index)}\r\n                        >\r\n                            {bell.displayName}\r\n                        </div>\r\n                        <div\r\n                            className={'BellPage-bell-lock' + (lockedBellIndex === index ? ' locked' : '')}\r\n                            onClick={() => lockBell(index)}\r\n                        >\r\n                            ðŸ”’\r\n                            </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst bellsCatalog: Bell[] = [\r\n    {\r\n        displayName: 'C',\r\n        fileName: 'low-c.wav',\r\n        startTime: 0.1\r\n    },\r\n    {\r\n        displayName: 'Câ™¯/Dâ™­',\r\n        fileName: 'c-sharp-d-flat.wav',\r\n        startTime: 0.35,\r\n        sharp: true\r\n    },\r\n    {\r\n        displayName: 'D',\r\n        fileName: 'd.wav',\r\n        startTime: 0.25\r\n    },\r\n    {\r\n        displayName: 'Dâ™¯/Eâ™­',\r\n        fileName: 'd-sharp-e-flat.wav',\r\n        startTime: 0.3,\r\n        sharp: true\r\n    },\r\n    {\r\n        displayName: 'E',\r\n        fileName: 'e.wav',\r\n        startTime: 0.3\r\n    },\r\n    {\r\n        displayName: 'F',\r\n        fileName: 'f.wav',\r\n        startTime: 0.35\r\n    },\r\n    {\r\n        displayName: 'G',\r\n        fileName: 'g.wav',\r\n        startTime: 0.4\r\n    },\r\n    {\r\n        displayName: 'Gâ™¯/Aâ™­',\r\n        fileName: 'g-sharp-a-flat.wav',\r\n        startTime: 0.3,\r\n        sharp: true\r\n    },\r\n    {\r\n        displayName: 'A',\r\n        fileName: 'a.wav',\r\n        startTime: 0.3\r\n    },\r\n    {\r\n        displayName: 'Aâ™¯/Bâ™­',\r\n        fileName: 'a-sharp-b-flat.wav',\r\n        startTime: 0.3,\r\n        sharp: true\r\n    },\r\n    {\r\n        displayName: 'B',\r\n        fileName: 'b.wav',\r\n        startTime: 0.25\r\n    },\r\n    {\r\n        displayName: 'C',\r\n        fileName: 'high-c.wav',\r\n        startTime: 0.25\r\n    }\r\n];","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { BellPage } from './components/BellPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BellPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}