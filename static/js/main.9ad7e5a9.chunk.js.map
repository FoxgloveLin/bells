{"version":3,"sources":["reportWebVitals.ts","components/BellPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BellPage","useState","bellsCatalog","map","bell","Audio","process","fileName","bellSounds","lockedBellIndex","setLockedBellIndex","hasDeviceMotion","setDeviceMotion","lockedBellIndexRef","useRef","updateBellStateAndRef","value","current","useEffect","checkAcceleration","event","accelerationIncludingGravity","x","z","window","addEventListener","setTimeout","removeEventListener","shakeEvent","Shake","threshold","timeout","start","ringBell","undefined","stop","index","shakeMode","bellIndex","clonedBell","cloneNode","currentTime","startTime","play","maybeRenderLock","locked","className","onClick","lockBell","sharp","displayName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ad7e5a9.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { FunctionComponent, useEffect, useRef, useState } from 'react';\r\n// @ts-ignore\r\nimport Shake from 'shake.js';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport './BellPage.scss';\r\n\r\ninterface Bell {\r\n    displayName: string;\r\n    fileName: string;\r\n    startTime: number;\r\n    sharp?: boolean;\r\n}\r\n\r\nexport const BellPage: FunctionComponent = () => {\r\n    const [bellSounds] = useState<HTMLAudioElement[]>(\r\n        bellsCatalog.map((bell: Bell) => {\r\n            return new Audio(`${process.env.PUBLIC_URL}/sounds/${bell.fileName}`);\r\n        })\r\n    );\r\n    const [lockedBellIndex, setLockedBellIndex] = useState<number>();\r\n    const [hasDeviceMotion, setDeviceMotion] = useState<boolean>(false);\r\n\r\n    const lockedBellIndexRef = useRef(lockedBellIndex);\r\n\r\n    const updateBellStateAndRef = (value?: number) => {\r\n        setLockedBellIndex(value);\r\n        lockedBellIndexRef.current = value;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const checkAcceleration = (event: DeviceMotionEvent) => {\r\n            if (event?.accelerationIncludingGravity?.x || event?.accelerationIncludingGravity?.x || event?.accelerationIncludingGravity?.z) {\r\n                setDeviceMotion(true);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('devicemotion', checkAcceleration);\r\n\r\n        setTimeout(() => {\r\n            window.removeEventListener('devicemotion', checkAcceleration);\r\n        }, 1000);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const shakeEvent = new Shake({ threshold: 10, timeout: 200 });\r\n        shakeEvent.start();\r\n        // @ts-ignore\r\n        window.addEventListener('shake', () => ringBell(undefined, true), false);\r\n\r\n        return (() => {\r\n            // @ts-ignore\r\n            window.removeEventListener('shake', () => ringBell(undefined, true), false);\r\n            shakeEvent.stop();\r\n        });\r\n    }, [hasDeviceMotion]);\r\n\r\n    const ringBell = (index?: number, shakeMode?: boolean) => {\r\n        const bellIndex = shakeMode ? lockedBellIndexRef.current : index;\r\n\r\n        if (bellIndex !== undefined) {\r\n            const clonedBell: any = bellSounds[bellIndex].cloneNode(); // actually type HTMLAudioElement\r\n            clonedBell.currentTime = bellsCatalog[bellIndex].startTime;\r\n            clonedBell.play();\r\n        }\r\n    };\r\n\r\n    const lockBell = (index: number) => {\r\n        if (lockedBellIndex === index) {\r\n            updateBellStateAndRef(undefined);\r\n        } else {\r\n            updateBellStateAndRef(index);\r\n        }\r\n    };\r\n\r\n    const maybeRenderLock = (index: number) => {\r\n        if (hasDeviceMotion) {\r\n            const locked = lockedBellIndex === index;\r\n\r\n            return (\r\n                <div\r\n                    className={'BellPage-bell-lock' + (locked ? ' locked' : '')}\r\n                    onClick={() => lockBell(index)}\r\n                >\r\n                    {locked ? <LockIcon /> : <LockOpenIcon />}\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='BellPage'>\r\n            {bellsCatalog.map((bell: Bell, index: number) => {\r\n                return (\r\n                    <div\r\n                        key={index}\r\n                        className='BellPage-bell'\r\n                    >\r\n                        <div\r\n                            className={'BellPage-bell-note' + (bell.sharp ? ' sharp' : '')}\r\n                            onClick={() => ringBell(index)}\r\n                        >\r\n                            {bell.displayName}\r\n                        </div>\r\n                        {maybeRenderLock(index)}\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst bellsCatalog: Bell[] = [\r\n    {\r\n        displayName: 'C',\r\n        fileName: 'low-c.wav',\r\n        startTime: 0.1\r\n    },\r\n    {\r\n        displayName: 'C♯/D♭',\r\n        fileName: 'c-sharp-d-flat.wav',\r\n        startTime: 0.35,\r\n        sharp: true\r\n    },\r\n    {\r\n        displayName: 'D',\r\n        fileName: 'd.wav',\r\n        startTime: 0.25\r\n    },\r\n    {\r\n        displayName: 'D♯/E♭',\r\n        fileName: 'd-sharp-e-flat.wav',\r\n        startTime: 0.3,\r\n        sharp: true\r\n    },\r\n    {\r\n        displayName: 'E',\r\n        fileName: 'e.wav',\r\n        startTime: 0.3\r\n    },\r\n    {\r\n        displayName: 'F',\r\n        fileName: 'f.wav',\r\n        startTime: 0.35\r\n    },\r\n    {\r\n        displayName: 'F♯/G♭',\r\n        fileName: 'f-sharp-g-flat.wav',\r\n        startTime: 0.3,\r\n        sharp: true\r\n    },\r\n    {\r\n        displayName: 'G',\r\n        fileName: 'g.wav',\r\n        startTime: 0.4\r\n    },\r\n    {\r\n        displayName: 'G♯/A♭',\r\n        fileName: 'g-sharp-a-flat.wav',\r\n        startTime: 0.3,\r\n        sharp: true\r\n    },\r\n    {\r\n        displayName: 'A',\r\n        fileName: 'a.wav',\r\n        startTime: 0.3\r\n    },\r\n    {\r\n        displayName: 'A♯/B♭',\r\n        fileName: 'a-sharp-b-flat.wav',\r\n        startTime: 0.3,\r\n        sharp: true\r\n    },\r\n    {\r\n        displayName: 'B',\r\n        fileName: 'b.wav',\r\n        startTime: 0.25\r\n    },\r\n    {\r\n        displayName: 'C',\r\n        fileName: 'high-c.wav',\r\n        startTime: 0.25\r\n    }\r\n];","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { BellPage } from './components/BellPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BellPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}