[{"E:\\workspace\\bells\\src\\index.tsx":"1","E:\\workspace\\bells\\src\\reportWebVitals.ts":"2","E:\\workspace\\bells\\src\\App.tsx":"3","E:\\workspace\\bells\\src\\components\\BellPage.tsx":"4"},{"size":530,"mtime":1608579062744,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":556,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":5040,"mtime":1608606606426,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"bhtiri",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"E:\\workspace\\bells\\src\\index.tsx",[],["21","22"],"E:\\workspace\\bells\\src\\reportWebVitals.ts",[],"E:\\workspace\\bells\\src\\App.tsx",[],["23","24"],"E:\\workspace\\bells\\src\\components\\BellPage.tsx",["25"],"import React, { FunctionComponent, useEffect, useRef, useState } from 'react';\r\n// @ts-ignore\r\nimport Shake from 'shake.js';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport './BellPage.scss';\r\n\r\ninterface Bell {\r\n    displayName: string;\r\n    fileName: string;\r\n    startTime: number;\r\n    sharp?: boolean;\r\n}\r\n\r\nexport const BellPage: FunctionComponent = () => {\r\n    const [lockedBellIndex, setLockedBellIndex] = useState<number>();\r\n    const [hasDeviceMotion, setDeviceMotion] = useState<boolean>(false);\r\n\r\n    const lockedBellIndexRef = useRef(lockedBellIndex);\r\n\r\n    const updateBellStateAndRef = (value?: number) => {\r\n        setLockedBellIndex(value);\r\n        lockedBellIndexRef.current = value;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const checkAcceleration = (event: DeviceMotionEvent) => {\r\n            setDeviceMotion(true);\r\n        };\r\n\r\n        window.addEventListener('devicemotion', checkAcceleration);\r\n\r\n        setTimeout(() => {\r\n            window.removeEventListener('devicemotion', checkAcceleration);\r\n        }, 1000);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const shakeEvent = new Shake({ threshold: 10, timeout: 200 });\r\n        shakeEvent.start();\r\n        // @ts-ignore\r\n        window.addEventListener('shake', () => ringBell(undefined, true), false);\r\n\r\n        return (() => {\r\n            // @ts-ignore\r\n            window.removeEventListener('shake', () => ringBell(undefined, true), false);\r\n            shakeEvent.stop();\r\n        });\r\n    }, [hasDeviceMotion]);\r\n\r\n    const bellSounds: HTMLAudioElement[] = bellsCatalog.map((bell: Bell) => {\r\n        return new Audio(`${process.env.PUBLIC_URL}/sounds/${bell.fileName}`);\r\n    });\r\n\r\n    const ringBell = (index?: number, shakeMode?: boolean) => {\r\n        const bellIndex = shakeMode ? lockedBellIndexRef.current : index;\r\n\r\n        if (bellIndex !== undefined) {\r\n            const clonedBell: any = bellSounds[bellIndex].cloneNode(); // actually type HTMLAudioElement\r\n            clonedBell.currentTime = bellsCatalog[bellIndex].startTime;\r\n            clonedBell.play();\r\n        }\r\n    };\r\n\r\n    const lockBell = (index: number) => {\r\n        if (lockedBellIndex === index) {\r\n            updateBellStateAndRef(undefined);\r\n        } else {\r\n            updateBellStateAndRef(index);\r\n        }\r\n    };\r\n\r\n    const maybeRenderLock = (index: number) => {\r\n        if (hasDeviceMotion) {\r\n            const locked = lockedBellIndex === index;\r\n\r\n            return (\r\n                <div\r\n                    className={'BellPage-bell-lock' + (locked ? ' locked' : '')}\r\n                    onClick={() => lockBell(index)}\r\n                >\r\n                    {locked ? <LockIcon /> : <LockOpenIcon />}\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='BellPage'>\r\n            {bellsCatalog.map((bell: Bell, index: number) => {\r\n                return (\r\n                    <div\r\n                        key={index}\r\n                        className='BellPage-bell'\r\n                    >\r\n                        <div\r\n                            className={'BellPage-bell-note' + (bell.sharp ? ' sharp' : '')}\r\n                            onClick={() => ringBell(index)}\r\n                        >\r\n                            {bell.displayName}\r\n                        </div>\r\n                        {maybeRenderLock(index)}\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst bellsCatalog: Bell[] = [\r\n    {\r\n        displayName: 'C',\r\n        fileName: 'low-c.wav',\r\n        startTime: 0.1\r\n    },\r\n    {\r\n        displayName: 'C♯/D♭',\r\n        fileName: 'c-sharp-d-flat.wav',\r\n        startTime: 0.35,\r\n        sharp: true\r\n    },\r\n    {\r\n        displayName: 'D',\r\n        fileName: 'd.wav',\r\n        startTime: 0.25\r\n    },\r\n    {\r\n        displayName: 'D♯/E♭',\r\n        fileName: 'd-sharp-e-flat.wav',\r\n        startTime: 0.3,\r\n        sharp: true\r\n    },\r\n    {\r\n        displayName: 'E',\r\n        fileName: 'e.wav',\r\n        startTime: 0.3\r\n    },\r\n    {\r\n        displayName: 'F',\r\n        fileName: 'f.wav',\r\n        startTime: 0.35\r\n    },\r\n    {\r\n        displayName: 'F♯/G♭',\r\n        fileName: 'f-sharp-g-flat.wav',\r\n        startTime: 0.3,\r\n        sharp: true\r\n    },\r\n    {\r\n        displayName: 'G',\r\n        fileName: 'g.wav',\r\n        startTime: 0.4\r\n    },\r\n    {\r\n        displayName: 'G♯/A♭',\r\n        fileName: 'g-sharp-a-flat.wav',\r\n        startTime: 0.3,\r\n        sharp: true\r\n    },\r\n    {\r\n        displayName: 'A',\r\n        fileName: 'a.wav',\r\n        startTime: 0.3\r\n    },\r\n    {\r\n        displayName: 'A♯/B♭',\r\n        fileName: 'a-sharp-b-flat.wav',\r\n        startTime: 0.3,\r\n        sharp: true\r\n    },\r\n    {\r\n        displayName: 'B',\r\n        fileName: 'b.wav',\r\n        startTime: 0.25\r\n    },\r\n    {\r\n        displayName: 'C',\r\n        fileName: 'high-c.wav',\r\n        startTime: 0.25\r\n    }\r\n];",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"26","replacedBy":"30"},{"ruleId":"28","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":49,"column":8,"nodeType":"34","endLine":49,"endColumn":25,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],["36"],["37"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ringBell'. Either include it or remove the dependency array.","ArrayExpression",["38"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [hasDeviceMotion, ringBell]",{"range":"41","text":"42"},[1560,1577],"[hasDeviceMotion, ringBell]"]